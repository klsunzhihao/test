<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>assets</artifactId>
        <groupId>com.example</groupId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>boot-web</artifactId>
    <name>web</name>
    <description>父子项目</description>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>


    </dependencies>

    <!--自定义添加profiles节点（Maven多环境）-->
    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <!-- activeByDefault 为 true 表示，默认激活 id为dev 的profile-->
                <activeByDefault>true</activeByDefault>
            </activation>
            <!-- properties 里面可以添加自定义节点，如下添加了一个env节点 -->
            <properties>
                <!-- 这个节点的值可以在maven的其他地方引用，可以简单理解为定义了一个叫env的变量 -->
                <env>dev</env>
            </properties>
        </profile>
        <profile>
            <id>test</id>
            <properties>
                <env>test</env>
            </properties>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <env>prod</env>
            </properties>
        </profile>
    </profiles>

    <!--Maven多环境配置-->
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>

        <!--配置Maven环境-->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <excludes>
                    <!--先排除application开头的配置文件-->
                    <exclude>application*.properties</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <!--filtering 需要设置为 true，这样在include的时候，才会把
                配置文件中的@env@ 这个maven`变量`替换成当前环境的对应值  -->
                <filtering>true</filtering>
                <includes>
                    <!--引入所需环境的配置文件-->
                    <include>application.properties</include>
                    <include>application-${env}.properties</include>
                </includes>
            </resource>
        </resources>

    </build>


</project>