<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.5.6</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.example</groupId>
    <artifactId>demo</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>demo</name>
    <description>Demo project for Spring Boot</description>
    <properties>
        <java.version>1.8</java.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!--JDBC-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>

        <!--mysql-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>

    </dependencies>

    <repositories>
        <repository>
            <name>华为maven仓库</name>
            <id>huawei</id>
            <url>https://mirrors.huaweicloud.com/repository/maven/</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <name>华为maven插件仓库</name>
            <id>huawei_plugin</id>
            <url>https://mirrors.huaweicloud.com/repository/maven/</url>
        </pluginRepository>
    </pluginRepositories>


   <!-- <profiles>
        <profile>
            <id>dev</id>
            <activation>
                &lt;!&ndash; activeByDefault 为 true 表示，默认激活 id为dev 的profile&ndash;&gt;
                <activeByDefault>true</activeByDefault>
            </activation>
            &lt;!&ndash; properties 里面可以添加自定义节点，如下添加了一个env节点 &ndash;&gt;
            <properties>
                &lt;!&ndash; 这个节点的值可以在maven的其他地方引用，可以简单理解为定义了一个叫env的变量 &ndash;&gt;
                <env>dev</env>
            </properties>
        </profile>
        <profile>
            <id>test</id>
            <properties>
                <env>test</env>
            </properties>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <env>prod</env>
            </properties>
        </profile>
    </profiles>-->

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>

        <!--<resources>
            <resource>
                <directory>src/main/resources</directory>
                <excludes>
                    &lt;!&ndash;先排除application开头的配置文件&ndash;&gt;
                    <exclude>application*.properties</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                &lt;!&ndash;filtering 需要设置为 true，这样在include的时候，才会把
                配置文件中的@env@ 这个maven`变量`替换成当前环境的对应值  &ndash;&gt;
                <filtering>true</filtering>
                <includes>
                    &lt;!&ndash;引入所需环境的配置文件&ndash;&gt;
                    <include>application.properties</include>
                    <include>application-${env}.properties</include>
                </includes>
            </resource>
        </resources>-->
    </build>

</project>
